// Generated by purs version 0.14.3
"use strict";
var Control_Applicative_Indexed = require("../Control.Applicative.Indexed/index.js");
var Control_Apply_Indexed = require("../Control.Apply.Indexed/index.js");
var Control_Bind_Indexed = require("../Control.Bind.Indexed/index.js");
var Data_Functor_Indexed = require("../Data.Functor.Indexed/index.js");
var IxMonad = function (IxApplicative0, IxBind1) {
  this.IxApplicative0 = IxApplicative0;
  this.IxBind1 = IxBind1;
};
_c = IxMonad;
var iwhenM = function (dictIxMonad) {
  return function (mb) {
    return function (m) {
      return Control_Bind_Indexed.ibind(dictIxMonad.IxBind1())(mb)(function (b) {
        return Control_Applicative_Indexed.iwhen(dictIxMonad.IxApplicative0())(b)(m);
      });
    };
  };
};
var iunlessM = function (dictIxMonad) {
  return function (mb) {
    return function (m) {
      return Control_Bind_Indexed.ibind(dictIxMonad.IxBind1())(mb)(function (b) {
        return Control_Applicative_Indexed.iunless(dictIxMonad.IxApplicative0())(b)(m);
      });
    };
  };
};
var iap = function (dictIxMonad) {
  return function (f) {
    return function (a) {
      return Control_Bind_Indexed.ibind(dictIxMonad.IxBind1())(f)(function (f$prime) {
        return Control_Bind_Indexed.ibind(dictIxMonad.IxBind1())(a)(function (a$prime) {
          return Control_Applicative_Indexed.ipure(dictIxMonad.IxApplicative0())(f$prime(a$prime));
        });
      });
    };
  };
};
module.exports = {
  IxMonad: IxMonad,
  iap: iap,
  iwhenM: iwhenM,
  iunlessM: iunlessM,
  IxApplicative: Control_Applicative_Indexed.IxApplicative,
  ipure: Control_Applicative_Indexed.ipure,
  iunless: Control_Applicative_Indexed.iunless,
  iwhen: Control_Applicative_Indexed.iwhen,
  IxApply: Control_Apply_Indexed.IxApply,
  iapply: Control_Apply_Indexed.iapply,
  iapplyFirst: Control_Apply_Indexed.iapplyFirst,
  iapplySecond: Control_Apply_Indexed.iapplySecond,
  IxBind: Control_Bind_Indexed.IxBind,
  composeiKleisli: Control_Bind_Indexed.composeiKleisli,
  composeiKleisliFlipped: Control_Bind_Indexed.composeiKleisliFlipped,
  ibind: Control_Bind_Indexed.ibind,
  ibindFlipped: Control_Bind_Indexed.ibindFlipped,
  IxFunctor: Data_Functor_Indexed.IxFunctor,
  imap: Data_Functor_Indexed.imap,
  ivoid: Data_Functor_Indexed.ivoid,
  ivoidLeft: Data_Functor_Indexed.ivoidLeft,
  ivoidRight: Data_Functor_Indexed.ivoidRight
};
var _c;
$RefreshReg$(_c, "IxMonad");
